name: CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      docker_image: ${{ steps.build_image.outputs.docker_image }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Dependencies (Docker & Compose)
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          
      - name: Build Docker Images
        id: build_image
        run: |
          docker-compose build --parallel
          docker tag app:latest app:${{ github.sha }}
          docker tag app:${{ github.sha }} app:latest
          echo "docker_image=app:${{ github.sha }}" >> $GITHUB_ENV
          
      - name: Upload Docker Image as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: app_${{ github.sha }}.tar
          run: |
            docker save -o app_${{ github.sha }}.tar app:${{ github.sha }}


  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Dependencies (Docker & Compose)
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: ./
      
      - name: Load Docker Image
        run: |
          docker load -i app_${{ github.sha }}.tar

      - name: Run Tests
        run: docker-compose run --rm test --image app:${{ github.sha }}

  cleanup:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Stop and Clean Up Containers
        if: always()
        run: docker-compose down --volumes --remove-orphans
